name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Install AWS CLI (if not already installed)
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build Spring Boot Application
        run: ./gradlew build -x test  # 테스트 생략 가능

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Log in to AWS ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

      - name: Build and Push Docker Image to AWS ECR
        run: |
          IMAGE_NAME=${{ secrets.AWS_ECR_REGISTRY }}/spring-boot-app
          VERSION=$(date +%Y%m%d%H%M%S)
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$VERSION .
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
